/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutProductsImport } from './routes/_layout/products'
import { Route as LayoutItemsImport } from './routes/_layout/items'
import { Route as LayoutInvoiceImport } from './routes/_layout/invoice'
import { Route as LayoutCustomersImport } from './routes/_layout/customers'
import { Route as LayoutCompanyImport } from './routes/_layout/company'
import { Route as LayoutAdminImport } from './routes/_layout/admin'
import { Route as LayoutInvoicesIndexImport } from './routes/_layout/invoices/index'
import { Route as LayoutInvoicesCreateImport } from './routes/_layout/invoices/create'
import { Route as LayoutInvoicesInvoiceIdImport } from './routes/_layout/invoices/$invoiceId'
import { Route as LayoutInvoicesInvoiceIdEditImport } from './routes/_layout/invoices/$invoiceId/edit'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProductsRoute = LayoutProductsImport.update({
  path: '/products',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutItemsRoute = LayoutItemsImport.update({
  path: '/items',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutInvoiceRoute = LayoutInvoiceImport.update({
  path: '/invoice',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCustomersRoute = LayoutCustomersImport.update({
  path: '/customers',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCompanyRoute = LayoutCompanyImport.update({
  path: '/company',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutInvoicesIndexRoute = LayoutInvoicesIndexImport.update({
  path: '/invoices/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutInvoicesCreateRoute = LayoutInvoicesCreateImport.update({
  path: '/invoices/create',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutInvoicesInvoiceIdRoute = LayoutInvoicesInvoiceIdImport.update({
  path: '/invoices/$invoiceId',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutInvoicesInvoiceIdEditRoute =
  LayoutInvoicesInvoiceIdEditImport.update({
    path: '/edit',
    getParentRoute: () => LayoutInvoicesInvoiceIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/company': {
      preLoaderRoute: typeof LayoutCompanyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/customers': {
      preLoaderRoute: typeof LayoutCustomersImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/invoice': {
      preLoaderRoute: typeof LayoutInvoiceImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/items': {
      preLoaderRoute: typeof LayoutItemsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/products': {
      preLoaderRoute: typeof LayoutProductsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/invoices/$invoiceId': {
      preLoaderRoute: typeof LayoutInvoicesInvoiceIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/invoices/create': {
      preLoaderRoute: typeof LayoutInvoicesCreateImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/invoices/': {
      preLoaderRoute: typeof LayoutInvoicesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/invoices/$invoiceId/edit': {
      preLoaderRoute: typeof LayoutInvoicesInvoiceIdEditImport
      parentRoute: typeof LayoutInvoicesInvoiceIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutAdminRoute,
    LayoutCompanyRoute,
    LayoutCustomersRoute,
    LayoutInvoiceRoute,
    LayoutItemsRoute,
    LayoutProductsRoute,
    LayoutSettingsRoute,
    LayoutIndexRoute,
    LayoutInvoicesInvoiceIdRoute.addChildren([
      LayoutInvoicesInvoiceIdEditRoute,
    ]),
    LayoutInvoicesCreateRoute,
    LayoutInvoicesIndexRoute,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
])

/* prettier-ignore-end */
