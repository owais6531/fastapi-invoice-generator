"""Add FBR models: Company, Customer, Product, FBRInvoice, FBRInvoiceItem

Revision ID: 217a567849c1
Revises: 1a31ce608336
Create Date: 2025-08-12 16:47:42.479084

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '217a567849c1'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('business_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('ntn_cnic', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('province', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('logo_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer',
    sa.Column('business_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('ntn_cnic', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('province', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('registration_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('hs_code', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('uom', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('tax_rate', sa.Float(), nullable=False),
    sa.Column('fixed_notified_value', sa.Float(), nullable=True),
    sa.Column('sales_tax_withheld_rate', sa.Float(), nullable=True),
    sa.Column('extra_tax_rate', sa.Float(), nullable=True),
    sa.Column('further_tax_rate', sa.Float(), nullable=True),
    sa.Column('fed_payable_rate', sa.Float(), nullable=True),
    sa.Column('sro_schedule_no', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('sro_item_serial_no', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('sale_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fbrinvoice',
    sa.Column('invoice_ref_no', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('invoice_date', sa.Date(), nullable=False),
    sa.Column('invoice_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('scenario_id', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('seller_ntn_cnic', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('seller_business_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('seller_province', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('seller_address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('buyer_ntn_cnic', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('buyer_business_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('buyer_province', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('buyer_address', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('buyer_registration_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('total_sales_value', sa.Float(), nullable=False),
    sa.Column('total_tax_amount', sa.Float(), nullable=False),
    sa.Column('total_invoice_value', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('fbr_reference', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('fbr_response', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('customer_id', sa.Uuid(), nullable=False),
    sa.Column('company_id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fbrinvoiceitem',
    sa.Column('hs_code', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('product_description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('uom', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('value_sales_excluding_st', sa.Float(), nullable=False),
    sa.Column('sales_tax_applicable', sa.Float(), nullable=False),
    sa.Column('sales_tax_withheld_at_source', sa.Float(), nullable=True),
    sa.Column('extra_tax', sa.Float(), nullable=True),
    sa.Column('further_tax', sa.Float(), nullable=True),
    sa.Column('fed_payable', sa.Float(), nullable=True),
    sa.Column('fixed_notified_value', sa.Float(), nullable=True),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('sro_schedule_no', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('sro_item_serial_no', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('sale_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('total_value', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('invoice_id', sa.Uuid(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['fbrinvoice.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('fbrinvoiceitem')
    op.drop_table('fbrinvoice')
    op.drop_table('product')
    op.drop_table('customer')
    op.drop_table('company')
    # ### end Alembic commands ###
